package advhelp

const Usage = `EXAMPLES

  The following example creates an unattended installer image that does not
  contain any hard-coded credentials. It writes the SSH server's public keys
  to the console, thus allowing the sysadmin to copy them out-of-band to
  their own machine.

  The auto_install.conf file automates the OpenBSD installer. The install.site
  script installs several packages, creates a new user with the specified SSH
  public key, and adds the user to /etc/doas.conf.

    $ find . -type f
    ./auto_install.conf
    ./create.sh
    ./generic/etc/adduser.conf
    ./generic/install.site
    ./generic/usr/local/bin/this-ends-up-in-usr-local-bin.sh

    $ cat create.sh
    #!/bin/sh

    set -u

    dir_path="$(realpath $(dirname "${0}"))"

    arch=amd64
    version=7.3

    doas mkobsd \
      -o "${dir_path}/example-${version}-${arch}.iso" \
      -a ${arch} \
      -r ${version} \
      -i "${dir_path}/auto_install.conf" \
      -d "${dir_path}/generic"

    $ cat auto_install.conf
    # Note: This file is documented in "man 8 autoinstall"
    System hostname = example
    # Note: 13 "*" is a magic string that disables password login for root.
    Password for root = *************
    Set name(s) = +site* -game*
    Continue without verification = yes

    $ cat generic/install.site
    #!/bin/sh

    set -ex

    add_admin() {
      local username="${1}"
      shift
      local home="/home/${username}"

      echo "permit nopass ${username} as root" >> /etc/doas.conf

      /usr/sbin/adduser -batch "${username}" wheel

      for ssh_public_key in "${@}"; do
        echo "${ssh_public_key}" >> "${home}/.ssh/authorized_keys"
      done
    }

    /usr/sbin/pkg_add -a vim--no_x11 go git

    echo "@reboot /bin/sh -c '(echo -----BEGIN SSHD PUBLIC KEYS-----; /bin/cat /etc/ssh/*.pub; echo -----END SSHD PUBLIC KEYS-----) > /dev/tty00'" >> /var/cron/tabs/root

    add_admin me 'BUH'

    /usr/bin/doas -C /etc/doas.conf

    /bin/chmod 0600 /etc/doas.conf

    $ cat generic/etc/adduser.conf
    #
    # /etc/adduser.conf - automatic generated by adduser(8)
    #
    # Note: adduser reads *and* writes this file.
    #	You may change values, but don't add new things before the
    #	line ''## DO NOT DELETE THIS LINE!''
    #	Also, unquoted strings may cause warnings
    #

    # verbose = [0-2]
    verbose = 1

    # Get new password for new users
    # defaultpasswd =  yes | no
    defaultpasswd = "no"

    # Default encryption method for user passwords
    # Methods are all those listed in login.conf(5)
    encryptionmethod = "auto"

    # copy dotfiles from this dir ("/etc/skel" or "no")
    dotdir = "/etc/skel"

    # send message to user? ("yes" or "no")
    send_message = "no"

    # send this file to new user ("/etc/adduser.message")
    message_file = "/etc/adduser.message"

    # config file for adduser ("/etc/adduser.conf")
    config = "/etc/adduser.conf"

    # logfile ("/var/log/adduser" or "no")
    logfile = "/var/log/adduser"

    # default HOME directory ("/home")
    home = "/home"

    # List of directories where shells located
    # path = ('/bin', '/usr/bin', '/usr/local/bin')
    path = ('/bin', '/usr/bin', '/usr/local/bin')

    # common shell list, first element has higher priority
    # shellpref = ('bash', 'tcsh', 'ksh', 'csh', 'sh')
    shellpref = ('csh', 'sh', 'bash', 'tcsh', 'ksh', 'nologin')

    # defaultshell if not empty ("bash")
    defaultshell = "sh"

    # defaultgroup ('USER' for same as username or any other valid group)
    defaultgroup = "USER"

    # new users get this uid
    uid_start = 1000
    uid_end = 2147483647

    # default login.conf(5) login class
    defaultclass = "default"

    # login classes available from login.conf(5)
    # login_classes = ('default', 'daemon', 'staff')
    login_classes = ('default', 'daemon', 'staff', 'authpf', 'pbuild', 'bgpd', 'unbound', 'vmd', 'xenodm')

    ## DO NOT DELETE THIS LINE!
    ## your own variables, see /etc/adduser.message

    ## end
`
